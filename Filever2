import org.openrewrite.ExecutionContext;
import org.openrewrite.Recipe;
import org.openrewrite.java.JavaIsoVisitor;
import org.openrewrite.java.tree.J;
import org.openrewrite.java.tree.Markers;
import org.openrewrite.java.tree.Space;
import org.openrewrite.java.tree.Tree;
import org.openrewrite.java.tree.JRightPadded;

import java.util.Collections;

public class IfWithReturnBraces extends Recipe {
    @Override
    public String getDisplayName() {
        return "Expand one-line if/return into braces";
    }

    @Override
    public String getDescription() {
        return "Adds braces and newlines so that return statements are always inside braces.";
    }

    @Override
    public JavaIsoVisitor<ExecutionContext> getVisitor() {
        return new JavaIsoVisitor<ExecutionContext>() {
            @Override
            public J.If visitIf(J.If ifStmt, ExecutionContext ctx) {
                J.If i = super.visitIf(ifStmt, ctx);

                if (i.getThenPart() instanceof J.Return) {
                    J.Block thenBlock = new J.Block(
                            Tree.randomId(),
                            Space.EMPTY,
                            Markers.EMPTY,
                            new JRightPadded<>(false, Space.EMPTY, Markers.EMPTY), // statik = false
                            Collections.singletonList(JRightPadded.build(i.getThenPart())),
                            Space.EMPTY
                    );
                    i = i.withThenPart(thenBlock);
                }
                return i;
            }
        };
    }
}
